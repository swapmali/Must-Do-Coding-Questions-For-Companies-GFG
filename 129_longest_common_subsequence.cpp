// https://practice.geeksforgeeks.org/problems/longest-common-subsequence/0
#include <bits/stdc++.h>
using namespace std;

// find out actual sequence which is of longest length
// from the matrix generated by function lcs()
void get_actual_lcs( vector< vector<int> > L, string a, string b, int n, int m)
{
	string s;
	for (int i = n; i > 0;)
	{
		for (int j = m; j > 0;)
		{
			if (a[i - 1] == b[j - 1])
			{
				s = a[i - 1] + s;
				i--;
				j--;
			}
			else
			{
				if (L[i - 1][j] > L[i][j - 1])
				{
					i--;
				}
				else
				{
					j--;
				}
			}
		}
	}
	cout << "lcs: " << s << endl;
}


// forms lcs matrix of size n+1 by m+1
int lcs(string a, string b, int n, int m)
{
	// int L[n + 1][m + 1];
	vector< vector<int> > L(n + 1, vector<int> (m + 1));

	for (int i = 0; i < n + 1; ++i)
	{
		for (int j = 0; j < m + 1; ++j)
		{
			if (i == 0 || j == 0 )
			{
				L[i][j] = 0;
			}
			else if (a[i - 1] == b[j - 1])
			{
				L[i][j] = L[i - 1][j - 1] + 1;
			}
			else
			{
				L[i][j] = max(L[i - 1][j], L[i][j - 1]);
			}
		}
	}
	get_actual_lcs(L, a, b, n, m);
	return L[n][m];
}




int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	int t;
	cin >> t;
	while (t--)
	{
		int n, m;
		cin >> n >> m;
		string a, b;

		cin >> a >> b;
		int length = lcs(a, b, n, m);
		cout << length << endl;
	}
	return 0;
}